var k = Object.defineProperty;
var w = (a, t, e) => t in a ? k(a, t, { enumerable: !0, configurable: !0, writable: !0, value: e }) : a[t] = e;
var n = (a, t, e) => (w(a, typeof t != "symbol" ? t + "" : t, e), e);
class E {
  fetchLivePricing(t, e) {
    const r = `${`https://www${e ? "" : "-staging"}.forbes.com/price?key=`}${t}`;
    return fetch(r).then((s) => s.json());
  }
}
class m {
  constructor() {
    n(this, "pushDataLayerEvent", (t, e, i) => {
      window.dataLayer.push({
        event: "analyticsEvent",
        "event category": "Template Area Interaction",
        "event action": "Click",
        "event label": `ExternalModuleB${t}${e ? "Award" : "Link"}:${i}`
      });
    });
  }
  createVendorBlock(t) {
    const e = document.createElement("div"), i = document.createElement("div");
    e.classList.add("fbs-pricing__vendors-container"), i.classList.add("fbs-pricing__vendors-wrapper"), this.createVendorName(t, e), e.appendChild(i);
    const r = t.attributes || [], s = this.embedHasAwardAttribute(r);
    return this.createVendorCTA([t], i, s, !0), this.createVendorCTA(t == null ? void 0 : t.productAlternatives, i, s, !1), e;
  }
  embedHasAwardAttribute(t) {
    var i;
    let e = "";
    for (let r = 0; r < t.length; r++)
      t[r].type && (e = (i = t[r]) == null ? void 0 : i.type);
    return e === "award";
  }
  createVendorCTA(t, e, i, r) {
    var s, h, o, u, d, f;
    for (let c = 0; c < (t == null ? void 0 : t.length); c++) {
      const g = (s = t[c]) == null ? void 0 : s.findsNonAffiliateLink, p = (h = t[c]) == null ? void 0 : h.findsLink, P = (o = t[c]) == null ? void 0 : o.url, C = (u = t[c]) == null ? void 0 : u.affiliatizedUrl, b = p || C || g || P, $ = r ? 1 : c + 2;
      if (b) {
        const l = document.createElement("a"), v = document.createElement("button"), A = ((d = t[c]) == null ? void 0 : d.findsLabel) || ((f = t[c]) == null ? void 0 : f.callToAction), S = A || "SHOP NOW";
        v.innerText = S, l.classList.add("embed-base", "finds-embed"), l.setAttribute("href", b), l.setAttribute("target", "_blank"), l.setAttribute("aria-label", S), l.setAttribute("rel", "nofollow noopener"), l.addEventListener("click", () => this.pushDataLayerEvent($, i, b)), l.appendChild(v), e.appendChild(l);
      }
    }
  }
  createVendorName(t, e) {
    if ((t == null ? void 0 : t.findsLink) && (t.price || t.salePrice)) {
      const i = document.createElement("p"), r = t != null && t.vendorName ? `AT ${t.vendorName}` : "";
      i.innerText = r, i.classList.add("fbs-pricing__vendor-name"), i.setAttribute("aria-label", r), e.appendChild(i);
    }
  }
}
class V extends HTMLElement {
  constructor() {
    super();
    n(this, "multiVendorService");
    n(this, "acceptedSalePrice");
    n(this, "callout");
    n(this, "fbsPricingService");
    n(this, "isProd");
    n(this, "live");
    n(this, "percentDifference");
    n(this, "priceDifference");
    n(this, "priceRange");
    n(this, "regularPrice");
    n(this, "salePrice");
    n(this, "key");
    n(this, "initComplete");
    n(this, "embedData");
    n(this, "mappedData");
    this.multiVendorService = new m();
  }
  static get observedAttributes() {
    return [
      "aria-label",
      "embed-data",
      "callout",
      "live",
      "key",
      "regular-price",
      "sale-price"
    ];
  }
  connectedCallback() {
    this.initializeUnit();
  }
  disconnectedCallback() {
    this && this.firstChild && this.removeChild(this.firstChild);
  }
  attributeChangedCallback(e) {
    this && this.initComplete && (this.live !== "true" || e === "live") && (this.firstChild && this.removeChild(this.firstChild), this.initializeUnit());
  }
  initializeUnit() {
    this.initComplete = !1, this.priceRange = !1, this.live = this.getLive() || "false", this.key = this.getKey() || "", this.setEmbedData(), this.live === "true" && this.key ? (this.isProd = L || !1, this.fbsPricingService = new E(), this.fbsPricingService.fetchLivePricing(this.key, this.isProd).then((e) => this.setAPIValues(e)).catch((e) => {
      this.setElement(), console.error("Error in DP Pricer Response", e);
    })) : (this.callout = this.getCallout() || "", this.setElement());
  }
  apiHasPrices(e) {
    return !e || !e.success ? !1 : e.result && (!!e.result.priceRegular || !!e.result.priceSale);
  }
  setAPIValues(e) {
    if (this.apiHasPrices(e)) {
      const { priceRegular: i = [], priceSale: r = [] } = e.result;
      r.length > 1 ? (this.setRegularPrice(r[1].toString()), this.setSalePrice(r[0].toString()), this.priceRange = !0) : i.length > 1 ? (this.setRegularPrice(i[1].toString()), this.setSalePrice(i[0].toString()), this.priceRange = !0) : (this.setSalePrice("0"), this.setRegularPrice("0"), i.length === 1 && this.setRegularPrice(i[0].toString()), r.length === 1 && this.setSalePrice(r[0].toString()));
    }
    this.setElement();
  }
  setRegularPrice(e) {
    !e || this.setAttribute("regular-price", e);
  }
  getRegularPrice() {
    const e = this.getAttribute("regular-price");
    return e ? +parseFloat(e).toFixed() || 0 : null;
  }
  isAcceptedSalePrice(e) {
    return typeof e != "number" ? !1 : !!e || e === 0;
  }
  setSalePrice(e) {
    !e || this.setAttribute("sale-price", e);
  }
  getSalePrice() {
    const e = this.getAttribute("sale-price");
    if (e) {
      const i = Math.round(parseFloat(e));
      return this.isAcceptedSalePrice(i) ? i : 0;
    } else
      return null;
  }
  setKey(e) {
    !e || this.setAttribute("key", e);
  }
  getKey() {
    return this.getAttribute("key") || "";
  }
  setEmbedData() {
    const e = /&quot;/g, i = this.getAttribute("embed-data"), r = i == null ? void 0 : i.replace(e, "");
    try {
      r && (this.embedData = JSON.parse(r));
    } catch (s) {
      console.error("Something went wrong with getting embedData", s);
    }
  }
  mapVendorData() {
    var i, r, s, h, o, u, d, f, c, g, p, P;
    return {
      attributes: ((i = this.embedData) == null ? void 0 : i.attributes) || [],
      callOutText: ((r = this.embedData) == null ? void 0 : r.callOutText) || "",
      findsLabel: ((s = this.embedData) == null ? void 0 : s.findsLabel) || "SHOP NOW",
      findsLink: ((h = this.embedData) == null ? void 0 : h.findsLink) || "",
      findsNonAffiliateLink: ((o = this.embedData) == null ? void 0 : o.findsNonAffiliateLink) || "",
      url: ((u = this.embedData) == null ? void 0 : u.url) || "",
      title: ((d = this.embedData) == null ? void 0 : d.title) || "",
      vendorName: ((f = this.embedData) == null ? void 0 : f.vendorName) || "",
      productAlternatives: ((c = this.embedData) == null ? void 0 : c.productAlternatives) || [],
      showAdditionalVendors: ((g = this.embedData) == null ? void 0 : g.showAdditionalVendors) || !1,
      price: (p = this.embedData) == null ? void 0 : p.price,
      salePrice: (P = this.embedData) == null ? void 0 : P.salePrice
    };
  }
  setLive(e) {
    !e || this.setAttribute("live", e);
  }
  getLive() {
    return this.getAttribute("live") || "";
  }
  setCallout(e) {
    !e || this.setAttribute("callout", e);
  }
  getCallout() {
    return this.getAttribute("callout") || "";
  }
  getPriceDifference() {
    return (this.regularPrice || 0) - (this.salePrice || 0);
  }
  getPercentDifference() {
    return 100 - parseInt(
      Math.round(
        (this.salePrice || 1) / (this.regularPrice || 1) * 100
      ).toFixed(0),
      10
    );
  }
  setElement() {
    this.regularPrice = this.getRegularPrice(), this.salePrice = this.getSalePrice(), this.acceptedSalePrice = this.isAcceptedSalePrice(this.salePrice);
    const e = this.mapVendorData();
    this.firstChild && this.removeChild(this.firstChild), (!!this.regularPrice || !!this.salePrice) && (this.handlePriceCalculations(), this.appendChild(this.buildPricingHTML())), e != null && e.showAdditionalVendors && this.appendChild(this.multiVendorService.createVendorBlock(e)), setTimeout(() => {
      this.initComplete = !0;
    });
  }
  handlePriceCalculations() {
    this.acceptedSalePrice && this.regularPrice && (this.salePrice || 0) > this.regularPrice && (this.setRegularPrice((this.salePrice || 0).toString()), this.setSalePrice(this.regularPrice.toString()), this.regularPrice = this.getRegularPrice(), this.salePrice = this.getSalePrice()), !this.priceRange && this.acceptedSalePrice && this.regularPrice && (this.salePrice || 0) < this.regularPrice && (this.priceDifference = this.getPriceDifference(), this.percentDifference = this.getPercentDifference());
  }
  buildPricingHTML() {
    const e = document.createElement("div"), i = `<span class="fbs-pricing__regular-price" aria-label="regular price, &#36;${this.regularPrice}">&#36;${this.regularPrice}</span>`, r = `<span class="fbs-pricing__sale-price" aria-label="sale price, &#36;${this.salePrice}">&#36;${this.salePrice}</span>`;
    if (this.priceRange && this.salePrice !== this.regularPrice)
      e.innerHTML = `<span class="fbs-pricing__sale-price" aria-label="sale price, &#36;${this.salePrice}">&#36;${this.salePrice} - &#36;${this.regularPrice}</span>`;
    else if (this.live === "true")
      if (this.priceDifference && this.percentDifference) {
        const s = `<span class="fbs-pricing__savings" aria-label="SAVE &#36;${this.priceDifference} (${this.percentDifference}&#37;)">SAVE &#36;${this.priceDifference} (${this.percentDifference}&#37;)</span>`;
        e.innerHTML = `${r}${i}${s}`;
      } else
        this.salePrice && !this.regularPrice || this.salePrice === this.regularPrice ? e.innerHTML = r : e.innerHTML = i;
    else {
      const s = `<span class="fbs-pricing__savings">${this.callout}</span>`;
      this.acceptedSalePrice && this.regularPrice ? e.innerHTML = `${r}${i}${this.callout ? `${s}` : ""}` : this.acceptedSalePrice && !this.regularPrice ? e.innerHTML = `${r}${this.callout ? `${s}` : ""}` : e.innerHTML = `${i}${this.callout ? `${s}` : ""}`;
    }
    return e;
  }
}
let L;
const y = function(a) {
  L = a || !1, window.customElements.define("fbs-pricing", V);
}, R = function() {
  return new m();
};
export {
  y as FbsPricingInit,
  R as GetMultiVendorService,
  L as isProd
};
