"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.updateCordialListData = void 0;
var utils_1 = require("./utils");
/**
 *  updates a cordial users properties based on a custom Piano event
 *
 * @param event A customEvent from Piano
 * @param tp window tinypass object
 * @param properties cordial user properties to update
 */
var updateCordialFromWindow = function (templateParams, properties) {
    window.crdl('contact', {
        email: templateParams.userEmailInput ? templateParams.userEmailInput : window.Zephr.user.email,
    }, properties, { forceSubscribe: { email: true }, upsert: true });
};
/**
 * Gets additional cordial data from pref center and saves to localStorage
 *
 * @param email target user email
 * @param newsletter newsletter key/id
 * @param isProd Boolean Prod flag
 */
var storeNewsletterInfo = function (email, newsletter, isProd) {
    if (!email && !newsletter)
        return;
    fetch("https://".concat(isProd === true ? '' : 'staging-', "account.forbes.com/api-data/get-cordial-data?email=").concat(email), {
        credentials: 'include',
    })
        .then(function (res) {
        res.json().then(function (data) {
            if (data.cID) {
                (0, utils_1.handleLocalStorage)('cID', data.cID);
                var newslettersList = [];
                var newslettersListStorage = localStorage.getItem('newslettersList') || '';
                if (newslettersListStorage && !newslettersListStorage.includes(newsletter)) {
                    newslettersList.push(newsletter);
                    (0, utils_1.handleLocalStorage)('newslettersList', newslettersList.join(','));
                }
                else if (!newslettersListStorage) {
                    newslettersList.push(newsletter);
                    (0, utils_1.handleLocalStorage)('newslettersList', newslettersList.join(','));
                }
            }
        });
    })
        .catch(function (error) {
        console.error('Error getting cordial data: ', error);
    });
};
/**
 * non-je newsletters are handled by updating the coridal users properties
 *  prepares the data and runs using updateCordialFromWindow
 *
 * @param event A customEvent from Piano
 * @param tp window tinypass object
 */
var updateCordialListData = function (templateParams) {
    var properties = { 'channels.email.subscribeStatus': 'subscribed' };
    properties[templateParams.newsletter] = true;
    if (templateParams.additionalFieldKey) {
        properties[templateParams.additionalFieldKey] = templateParams.additionalFieldValue;
    }
    if (templateParams.geolocation === 'US') {
        properties.Announcements = true;
    }
    if (templateParams.lander) {
        var source = (0, utils_1.getParameterByName)('utm_source', window.location.search);
        var medium = (0, utils_1.getParameterByName)('utm_medium', window.location.search);
        var campaign = (0, utils_1.getParameterByName)('utm_campaign', window.location.search);
        properties.sourcearray = ["{".concat(source, "}-{").concat(medium, "}-{").concat(campaign, "}")];
    }
    updateCordialFromWindow(templateParams, properties);
    window.dataLayer.push({
        event: 'analyticsEvent',
        'event category': templateParams.lander ? 'Zephr' : 'Editorial Newsletters',
        'event action': templateParams.newsletter,
        'event label': templateParams.lander ? 'Successful Sign up' : 'Successful Submit',
        onboardingStep: '',
    });
    var localStorageEmail = templateParams.userEmailInput ? templateParams.userEmailInput : window.Zephr.user.email;
    storeNewsletterInfo(localStorageEmail, templateParams.newsletter, window.cordialIsProd);
};
exports.updateCordialListData = updateCordialListData;
