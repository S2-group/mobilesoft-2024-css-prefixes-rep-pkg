"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FbsTrackingService = void 0;
var fbs_cordial_1 = require("@forbes/fbs-cordial");
var fbs_zephr_1 = require("./fbs-zephr");
var cookies_1 = require("./cookies");
var google_analytics_1 = require("./google-analytics");
// import { initializePianoScript, refreshPianoOnStream } from './piano-init';
var fbs_tracking_util_1 = require("./fbs-tracking.util");
var sharing_hash_service_1 = require("./sharing-hash/sharing-hash.service");
var ketch_1 = require("./ketch");
/**
 * This service is used to fire tracking of any sort.
 *
 * [Implementation](https://github.forbes.com/Templates/fbs-tracking-2/blob/master/readme.md)
 */
var FbsTrackingService = /** @class */ (function () {
    function FbsTrackingService() {
        this.gaPreviousUrl = null;
        this.previousUrl = null;
        this.previousPath = null;
        this.cookiesService = new cookies_1.CookiesService();
        this.googleAnalyticsService = new google_analytics_1.GoogleAnalyticsService();
        this.sharingHashService = new sharing_hash_service_1.SharingHashService();
        this.trackingCalls = [];
        this.isEurope = false;
        this.isChina = false;
        this.isUsDpa = false;
        this.pianoInitialized = true;
    }
    FbsTrackingService.prototype.getUserLocationData = function () {
        return {
            isEurope: this.isEurope,
            isChina: this.isChina,
            isUsDpa: this.isUsDpa,
        };
    };
    FbsTrackingService.prototype.getSwbCookieValue = function () {
        return (0, ketch_1.getSwbCookieValue)();
    };
    FbsTrackingService.prototype.getSwbCookie = function () {
        return (0, ketch_1.getSwbCookie)();
    };
    FbsTrackingService.prototype.getFullConsent = function (userConsent) {
        return (0, ketch_1.getFullConsent)(userConsent);
    };
    FbsTrackingService.prototype.getUserConsent = function (consentPurpose) {
        if (consentPurpose === void 0) { consentPurpose = 'all'; }
        return (0, ketch_1.getUserConsent)(consentPurpose);
    };
    FbsTrackingService.prototype.checkJurisdictionCode = function () {
        return (0, ketch_1.checkJurisdictionCode)(this.getUserLocationData());
    };
    FbsTrackingService.prototype.getConsentState = function () {
        return (0, ketch_1.getConsentState)(this.getUserLocationData());
    };
    // public async startPiano(pianoData: GoogleAnalyticsData): Promise<void> {
    // 	const {
    // 		isProd,
    // 		categoryId,
    // 		DFPZone,
    // 		author,
    // 		login,
    // 		contribType,
    // 		templateType,
    // 		isRetracted,
    // 		slot,
    // 		blogType,
    // 		edit,
    // 		bertieBadgeSlugs,
    // 		entitySegments,
    // 		primaryChannel,
    // 		primarySection,
    // 		site,
    // 		published,
    // 		swimLane,
    // 		templateSubType,
    // 		isEurope,
    // 		isChina,
    // 		resourceId,
    // 		contentPaywall,
    // 	} = pianoData;
    // 	await initializePianoScript({
    // 		isProd,
    // 		fvid: this.getOrCreateClientId(),
    // 		containerId: 'GTM-NMQJM4',
    // 		site, // DataLayer Variable site
    // 		DFPZone, // DataLayer Variable DFPZone
    // 		author, // DataLayer Variable author
    // 		login, // DataLayer Variable login
    // 		contribType, // DataLayer Variable contribType
    // 		categoryId, // Article FUSE category ID array
    // 		templateType, // DataLayer Variable templateType
    // 		templateSubType, // DataLayer Variable templateSubType
    // 		isRetracted,
    // 		slot, // DataLayer Variable slot
    // 		swimlane: swimLane, // Url Query ss
    // 		blogType, // DataLayer Variable blogType
    // 		edit, // dataLayer Variable edit
    // 		bertieBadgeSlugs, // dataLayer variable bertieBadgeSlugs
    // 		entitySegments, // dataLayer variable entitySegments
    // 		primaryChannel, // DataLayer Variable primaryChannel
    // 		primarySection, // DataLayer Variable primarySection
    // 		published, // DataLayer Variable published
    // 		isEurope,
    // 		isChina,
    // 		resourceId, // Publication ResourceID
    // 		contentPaywall,
    // 	});
    // 	this.pianoInitialized = true;
    // }
    // public async refreshPianoInit(pianoData: GoogleAnalyticsData): Promise<void> {
    // 	const {
    // 		isProd,
    // 		categoryId,
    // 		DFPZone,
    // 		author,
    // 		login,
    // 		contribType,
    // 		templateType,
    // 		isRetracted,
    // 		slot,
    // 		blogType,
    // 		edit,
    // 		bertieBadgeSlugs,
    // 		entitySegments,
    // 		primaryChannel,
    // 		primarySection,
    // 		site,
    // 		published,
    // 		swimLane,
    // 		templateSubType,
    // 		isEurope,
    // 		isChina,
    // 		resourceId,
    // 		contentPaywall,
    // 		streamPosition,
    // 	} = pianoData;
    // 	await refreshPianoOnStream({
    // 		isProd,
    // 		fvid: this.getOrCreateClientId(),
    // 		containerId: 'GTM-NMQJM4',
    // 		site, // DataLayer Variable site
    // 		DFPZone, // DataLayer Variable DFPZone
    // 		author, // DataLayer Variable author
    // 		login, // DataLayer Variable login
    // 		contribType, // DataLayer Variable contribType
    // 		categoryId, // Article FUSE category ID array
    // 		templateType, // DataLayer Variable templateType
    // 		templateSubType, // DataLayer Variable templateSubType
    // 		isRetracted,
    // 		slot, // DataLayer Variable slot
    // 		swimlane: swimLane, // Url Query ss
    // 		blogType, // DataLayer Variable blogType
    // 		edit, // dataLayer Variable edit
    // 		bertieBadgeSlugs, // dataLayer variable bertieBadgeSlugs
    // 		entitySegments, // dataLayer variable entitySegments
    // 		primaryChannel, // DataLayer Variable primaryChannel
    // 		primarySection, // DataLayer Variable primarySection
    // 		published, // DataLayer Variable published
    // 		isEurope,
    // 		isChina,
    // 		resourceId, // Publication ResourceID
    // 		contentPaywall,
    // 		streamPosition,
    // 	});
    // }
    FbsTrackingService.prototype.cordialTracking = function (trackingData) {
        var _a;
        var shareChild = trackingData.shareChild;
        var customPageTitle = (_a = document === null || document === void 0 ? void 0 : document.title) === null || _a === void 0 ? void 0 : _a.replace(/\s-\shttps?:\/\/[\n\S]+/g, '').replace(shareChild, '');
        (0, fbs_cordial_1.trackCordial)(__assign({ customPageTitle: customPageTitle }, trackingData));
    };
    /**
     * This tracks the given data.
     */
    FbsTrackingService.prototype.track = function (trackingData, isPageview) {
        return __awaiter(this, void 0, void 0, function () {
            var consentState, parentHash, childHash, zephrCDN;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        window.pianoInitialized = true;
                        consentState = (0, ketch_1.getConsentState)({
                            isEurope: this.isEurope,
                            isChina: this.isChina,
                            isUsDpa: this.isUsDpa,
                        });
                        if (consentState === 'disapproved' || consentState === 'waiting') {
                            return [2 /*return*/];
                        }
                        if (!trackingData) {
                            return [2 /*return*/];
                        }
                        if (isPageview) {
                            this.updatePreviousUrl();
                            this.sharingHashService.setHash();
                        }
                        this.getOrCreateClientId();
                        parentHash = this.sharingHashService.getParentHash() || 'none';
                        childHash = this.sharingHashService.getChildHash() || 'none';
                        trackingData = __assign(__assign({}, trackingData), { shareParent: parentHash, shareChild: childHash, referrer: this.gaPreviousUrl, isEurope: this.isEurope.toString(), isChina: this.isChina.toString() });
                        zephrCDN = '';
                        return [4 /*yield*/, (0, fbs_zephr_1.zephrRun)(zephrCDN, trackingData)];
                    case 1:
                        _a.sent();
                        this.cordialTracking(trackingData);
                        // remove pianoInit variables before tracking
                        delete trackingData.isProd;
                        delete trackingData.swimLane;
                        this.googleAnalyticsService.track(trackingData);
                        // Collect calls for e2e testing
                        this.trackingCalls.push(trackingData);
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Generates or retrieves client_id
     */
    FbsTrackingService.prototype.getOrCreateClientId = function () {
        var clientId = this.cookiesService.get('client_id') || fbs_tracking_util_1.TrackingUtil.generateClientId();
        var expiresDate = new Date();
        expiresDate.setFullYear(expiresDate.getFullYear() + 2);
        this.cookiesService.set('client_id', clientId, {
            expires: expiresDate,
        });
        return clientId;
    };
    /**
     * Get the previous URL of the page which has WA and not have WA.
     */
    FbsTrackingService.prototype.getPreviousUrl = function () {
        return this.previousUrl || this.cookiesService.get('refURL') || document.referrer || '';
    };
    /**
     * Get the previous URL of the page and page scorll only for GA.
     */
    FbsTrackingService.prototype.getGAPreviousUrl = function () {
        return this.gaPreviousUrl || document.referrer || '';
    };
    /**
     * This updates the previous URL of the page.
     *
     * This takes into consideration that the welcome ad is not a real page.
     *
     * It should run exactly once per page view.
     */
    FbsTrackingService.prototype.updatePreviousUrl = function () {
        if (this.previousPath && this.previousPath !== window.location.pathname) {
            this.previousUrl = "".concat(window.location.protocol, "//").concat(window.location.host).concat(this.previousPath);
            this.gaPreviousUrl = "".concat(window.location.protocol, "//").concat(window.location.host).concat(this.previousPath);
        }
        else {
            this.gaPreviousUrl = this.getGAPreviousUrl();
            this.previousUrl = this.getPreviousUrl();
            this.cookiesService.remove('refURL', {
                path: '/',
                domain: '.forbes.com',
            });
            this.cookiesService.remove('toURL', {
                path: '/',
                domain: '.forbes.com',
            });
        }
        this.previousPath = window.location.pathname;
    };
    return FbsTrackingService;
}());
exports.FbsTrackingService = FbsTrackingService;
//# sourceMappingURL=fbs-tracking.service.js.map