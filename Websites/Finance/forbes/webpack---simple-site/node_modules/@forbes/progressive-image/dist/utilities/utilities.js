export function throttle(fn) {
    var _this = this;
    var threshold = 100;
    var last;
    var deferTimer;
    return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var context = _this || {};
        var now = +new Date();
        if (last && (now < last + threshold)) {
            clearTimeout(deferTimer);
            var next = threshold + now + 1;
            deferTimer = setTimeout(function () {
                last = now;
                context.deferred = true;
                fn.apply(context, args);
            }, next - last);
        }
        else {
            last = now;
            fn.apply(context, args);
        }
    };
}
//# sourceMappingURL=utilities.js.map