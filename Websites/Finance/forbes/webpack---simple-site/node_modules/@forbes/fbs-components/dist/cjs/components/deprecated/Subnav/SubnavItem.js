'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _tslib = require('../../../_virtual/_tslib.js');
var React = require('react');
var index = require('../../../node_modules/classnames/index.js');
var SubNavMenu = require('./SubNavMenu.js');
var useSubNavItemEvents = require('./useSubNavItemEvents.js');
var useSubNavItemReposition = require('./useSubNavItemReposition.js');
var Subnav = require('./Subnav.scss.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

function SubnavItem(_a) {
    var _b;
    _a._ref; var name = _a.name, href = _a.href, subMenuData = _a.subMenuData, _c = _a.clickEvent, clickEvent = _c === void 0 ? function () { return undefined; } : _c, children = _a.children, className = _a.className, _d = _a.isOpen, isOpen = _d === void 0 ? false : _d, _e = _a.setOpen, setOpen = _e === void 0 ? function () { } : _e, _f = _a.closeAll, closeAll = _f === void 0 ? function () { return undefined; } : _f, restProps = _tslib.__rest(_a, ["_ref", "name", "href", "subMenuData", "clickEvent", "children", "className", "isOpen", "setOpen", "closeAll"]);
    var _g = useSubNavItemReposition.useSubNavItemReposition({
        isOpen: isOpen,
    }), offsetRight = _g.offsetRight, offsetTop = _g.offsetTop, subNavMenuRef = _g.subNavMenuRef;
    var _h = useSubNavItemEvents.useSubNavItemEvents({
        subMenuData: subMenuData,
        isOpen: isOpen,
        setOpen: setOpen,
        clickEvent: clickEvent,
        closeAll: closeAll,
    }), hasSubMenu = _h.hasSubMenu, itemHoverProps = _h.itemHoverProps, linkProps = _h.linkProps;
    // Creates new React element with additional linkProps if the child element exists and is React function
    var subnavItem = children &&
        (typeof children.type === 'function'
            ? React__default["default"].cloneElement(children, _tslib.__assign({}, linkProps))
            : children);
    return (React__default["default"].createElement("li", _tslib.__assign({}, restProps, itemHoverProps, { className: index["default"](Subnav["default"].subnavItem, (_b = {}, _b[Subnav["default"].isOpen] = isOpen, _b), className) }),
        subnavItem || (React__default["default"].createElement("a", _tslib.__assign({ href: href }, linkProps), name)),
        hasSubMenu && (React__default["default"].createElement(SubNavMenu["default"], { style: {
                right: offsetRight,
                top: offsetTop,
            }, _ref: subNavMenuRef, subMenuData: subMenuData, isOpen: isOpen }))));
}

exports["default"] = SubnavItem;
//# sourceMappingURL=SubnavItem.js.map
