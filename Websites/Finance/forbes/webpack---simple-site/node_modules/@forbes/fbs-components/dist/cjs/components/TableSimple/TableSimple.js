'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _tslib = require('../../_virtual/_tslib.js');
var React = require('react');
var index$1 = require('../../node_modules/classnames/index.js');
var index = require('../../shared/components/ShowIf/index.js');
var tracking = require('../../shared/utilities/tracking.js');
var Pagination = require('../Pagination/Pagination.js');
var TableSimple$1 = require('./TableSimple.scss.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

var getPageData = function (data, pageNum, dataPerPage) {
    var startIndex = (pageNum - 1) * dataPerPage;
    return data.slice(startIndex, startIndex + dataPerPage);
};
var getValue = function (path, obj) {
    return path.split('.').reduce(function (prev, cur) {
        return prev ? prev[cur] : null;
    }, obj);
};
function TableSimple(_a) {
    var data = _a.data, dataPerPage = _a.dataPerPage, tableHeaders = _a.tableHeaders, rowDataKeys = _a.rowDataKeys, trackingProps = _a.trackingProps, isHighlighted = _a.isHighlighted, tableFooter = _a.tableFooter, isPaginationAdvanced = _a.isPaginationAdvanced, restProps = _tslib.__rest(_a, ["data", "dataPerPage", "tableHeaders", "rowDataKeys", "trackingProps", "isHighlighted", "tableFooter", "isPaginationAdvanced"]);
    var _b = React.useState(1), currentPage = _b[0], setCurrentPage = _b[1];
    var paginatedData = getPageData(data, currentPage, dataPerPage);
    var wrapWithLink = function (rowDataValue, rowData) {
        var dataValue = getValue(rowDataValue, rowData);
        if (rowData.link) {
            return (React__default["default"].createElement("a", { className: index$1["default"](TableSimple$1["default"].rowPanelFirstValue, isHighlighted && TableSimple$1["default"].highlighted), "data-testid": "rowPanelFirstValue", onClick: function () { return tracking.trackingHandler(trackingProps, rowData.label); }, href: rowData.link, target: rowData.target }, dataValue));
        }
        return dataValue;
    };
    return (React__default["default"].createElement("div", null,
        paginatedData && (React__default["default"].createElement("table", { className: TableSimple$1["default"].table },
            React__default["default"].createElement("thead", null,
                React__default["default"].createElement("tr", { className: TableSimple$1["default"].tableRow }, tableHeaders.map(function (rowLabel, key) { return (React__default["default"].createElement("th", { className: TableSimple$1["default"].tableLabel, key: key }, rowLabel)); }))),
            React__default["default"].createElement("tbody", null, paginatedData.map(function (rowData, key) { return (React__default["default"].createElement("tr", { className: TableSimple$1["default"].tableRow, key: key }, rowDataKeys.map(function (rowDataValue, index) {
                return index === 0 ? (React__default["default"].createElement("td", { className: TableSimple$1["default"].rowPanelData, key: index },
                    rowData.logo ? (React__default["default"].createElement("img", { className: TableSimple$1["default"].rowLogo, src: rowData.logo, alt: "logo" })) : (React__default["default"].createElement("span", { className: TableSimple$1["default"].logoPlaceholder })),
                    wrapWithLink(rowDataValue, rowData))) : (React__default["default"].createElement("td", { className: TableSimple$1["default"].rowPanelData, key: index }, getValue(rowDataValue, rowData)));
            }))); })))),
        tableFooter,
        React__default["default"].createElement(index["default"], { condition: dataPerPage < data.length },
            React__default["default"].createElement(Pagination["default"], _tslib.__assign({ handlePagination: setCurrentPage, currentPage: currentPage, dataPerPage: dataPerPage, dataLength: data.length, isAdvanced: isPaginationAdvanced, trackingProps: trackingProps }, restProps)))));
}

exports["default"] = TableSimple;
//# sourceMappingURL=TableSimple.js.map
