"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var zephrUtils_1 = require("./zephrUtils");
exports.default = (function (_a) {
    var _b = _a.DFPZone, DFPZone = _b === void 0 ? 'none' : _b, _c = _a.author, author = _c === void 0 ? 'none' : _c, _d = _a.login, login = _d === void 0 ? 'false' : _d, _e = _a.contribType, contribType = _e === void 0 ? 'none' : _e, _f = _a.templateType, templateType = _f === void 0 ? 'none' : _f, _g = _a.templateSubType, templateSubType = _g === void 0 ? 'none' : _g, isRetracted = _a.isRetracted, _h = _a.slot, slot = _h === void 0 ? 'none' : _h, swimLane = _a.swimLane, blogType = _a.blogType, edit = _a.edit, bertieBadgeSlugs = _a.bertieBadgeSlugs, entitySegments = _a.entitySegments, streamPosition = _a.streamPosition, resourceId = _a.resourceId, hasZetteAccess = _a.hasZetteAccess;
    var expandedValues = {};
    var pageType = DFPZone.substring(0, 9) === 'article-d' ? 'article' : DFPZone;
    expandedValues.pageType = pageType;
    expandedValues.author = author;
    // @todo: grant remapping
    if (typeof resourceId === 'string' && resourceId !== '') {
        expandedValues.resourceId = resourceId;
    }
    // @todo: cleanup naming conventions
    if (login === 'true') {
        expandedValues.bertie_user = true;
        expandedValues.login = true;
    }
    expandedValues.contribType = contribType;
    if (pageType === 'article') {
        expandedValues.template = templateType;
        expandedValues.templateSubType = templateSubType;
        expandedValues.streamIndex = streamPosition;
        if (templateType === 'finds') {
            expandedValues.shopping = true;
        }
        else if (templateType === 'advisor') {
            expandedValues.advisor = true;
        }
        else if (templateType === 'live') {
            expandedValues.live = true;
        }
        if (isRetracted) {
            expandedValues.retracted = true;
        }
        if ((0, zephrUtils_1.cd11IsSponsored)(swimLane, slot) === 'true') {
            expandedValues.sponsored_content = true;
        }
        if (blogType && zephrUtils_1.paidContentNameMapping[blogType]) {
            expandedValues.paid_content = true;
        }
        if (edit) {
            edit.split(',').forEach(function (tag) {
                // @todo: fix typing
                // eslint-disable-next-line @typescript-eslint/ban-ts-comment
                // @ts-ignore
                expandedValues["edit:".concat(tag)] = true;
            });
        }
        if (bertieBadgeSlugs && bertieBadgeSlugs !== 'none') {
            bertieBadgeSlugs.split(',').forEach(function (badge) {
                // @todo: fix typing
                // eslint-disable-next-line @typescript-eslint/ban-ts-comment
                // @ts-ignore
                expandedValues["badge:".concat(badge)] = true;
            });
        }
        if (entitySegments && entitySegments !== 'none') {
            entitySegments.split(',').forEach(function (es) {
                // @todo: fix typing
                // eslint-disable-next-line @typescript-eslint/ban-ts-comment
                // @ts-ignore
                expandedValues["es:".concat(es)] = true;
            });
        }
    }
    if (hasZetteAccess) {
        expandedValues.zette_access = true;
    }
    return expandedValues;
});
