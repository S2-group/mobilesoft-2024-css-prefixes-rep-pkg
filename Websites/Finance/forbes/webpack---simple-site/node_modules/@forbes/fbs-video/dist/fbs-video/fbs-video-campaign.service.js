// tslint:disable:max-line-length
export var campaignServiceConfig = {
    apiHostServer: 'https://forbes-campaign-service.forbes.com',
    autoplay: 'true',
    autoplaymuted: 'true',
    defaultVideoId: '',
};
/**
 * class ForbesCampaignService
 *
 * Class for retrieving and reporting scheduled campaign videos
 * Every bit of code in this class was written and provided by Brightcove devs
 */
var ForbesCampaignService = /** @class */ (function () {
    /**
     * @constructor
     * @property {string} campaign_host_server Server root URL for campaign service (i.e. https://forbes-campaign-service.brightcove.services)
     * @property {string} client_region ISO 3166-1 alpha-2 country code for this client (i.e. US, FR, DE)
     */
    function ForbesCampaignService(apiHostServer, region) {
        this.randomVideoIdUrl = ('{apiHostServer}/v1/campaign/video?region={region}').replace('{apiHostServer}', apiHostServer).replace('{region}', region);
        this.availableVideoIdsUrl = ('{apiHostServer}/v1/campaign/availablevideos?region={region}').replace('{apiHostServer}', apiHostServer).replace('{region}', region);
        this.videoPlaybackVideoIdUrl = ('{apiHostServer}/v1/campaign/video?region={region}').replace('{apiHostServer}', apiHostServer).replace('{region}', region);
        // track to see if this campaign video has already been played
        this._playedCampaigns = [];
        // track to see if this video has already been played
        this._playedVideos = [];
    }
    /**
     * Get a Video ID to play from the campaign service
     * @param {function} cb - The callback function to call when the request is complete
     */
    ForbesCampaignService.prototype.getCampaign = function (cb) {
        var bcXhr = new XMLHttpRequest();
        bcXhr.open('GET', this.randomVideoIdUrl, true);
        bcXhr.onload = function () {
            var jsonResponse = {};
            try {
                jsonResponse = JSON.parse(bcXhr.responseText);
            }
            catch (e) {
                console.error(e);
            }
            if (typeof cb === 'function') {
                if (jsonResponse && jsonResponse.video_id) {
                    cb(jsonResponse);
                }
                else {
                    cb();
                }
            }
        };
        bcXhr.send();
    };
    /**
     * Get an array of all available Video IDs to play from the campaign service
     * @param {function} cb - The callback function to call when the request is complete
     */
    ForbesCampaignService.prototype.getAvailableCampaigns = function (cb) {
        var bcXhr = new XMLHttpRequest();
        bcXhr.open('GET', this.availableVideoIdsUrl, true);
        bcXhr.onload = function () {
            var jsonResponse = [];
            try {
                jsonResponse = JSON.parse(bcXhr.responseText);
            }
            catch (e) {
                console.error(e);
            }
            if (typeof cb === 'function') {
                if (((jsonResponse || [])[0] || {}).video_id) {
                    cb(jsonResponse);
                }
                else {
                    cb();
                }
            }
        };
        bcXhr.send();
    };
    /**
     * Tells the campaign service that the campaign Video ID has been played
     * @param {object} campaign The campaign object retrieve from the `getCampaign` function.
     * If the object contains the `campgaign_id` property, that is the campaign that will be
     * counted.  If the object contains only the `video_id` property.  If it contains the
     * `video_id` property, the system will count the playback against any active campaign
     * in the specified region.
     * @param {function} cb - The callback function to call when the request is complete
     */
    ForbesCampaignService.prototype.playCampaign = function (campaign, cb) {
        var _this = this;
        if (typeof cb !== 'function') {
            cb = function () { };
        }
        // if we've already played this campaign video, don't register it as another playback in the campaign
        if (!campaign ||
            (campaign.campaign_id && _this._playedCampaigns.indexOf(campaign.campaign_id) > -1) ||
            (campaign.video_id && _this._playedVideos.indexOf(campaign.video_id) > -1)) {
            cb();
            return;
        }
        var bcXhr = new XMLHttpRequest();
        bcXhr.open('POST', this.videoPlaybackVideoIdUrl, true);
        bcXhr.setRequestHeader('Content-Type', 'application/json');
        bcXhr.onload = function () {
            if (typeof cb === 'function') {
                if (this.readyState === XMLHttpRequest.DONE && this.status === 204) {
                    // we registered this as a playback, add it to the list so we don't do that if the video comes up again
                    if (campaign.campaign_id) {
                        _this._playedCampaigns.push(campaign.campaign_id);
                    }
                    if (campaign.video_id) {
                        _this._playedVideos.push(campaign.video_id);
                    }
                    cb();
                }
            }
        };
        bcXhr.send(JSON.stringify(campaign));
    };
    return ForbesCampaignService;
}());
export { ForbesCampaignService };
//# sourceMappingURL=fbs-video-campaign.service.js.map