"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
/*
Please note that in both of the super calls below we are setting
the prototype chain manually. This needs to be done when extending built-ins like
`Error`, `Array` and `Map`.
The detailed reason why we are doing this is because of the following recommendations
from the typescript team:
https://github.com/Microsoft/TypeScript/wiki/FAQ#why-doesnt-extending-built-ins-like-error-array-and-map-work
 */
var MonorailUnableToProduceError = /** @class */ (function (_super) {
    tslib_1.__extends(MonorailUnableToProduceError, _super);
    function MonorailUnableToProduceError(response) {
        var _this = _super.call(this, "Error producing to the Monorail Edge. \n      Response received: " + JSON.stringify(response)) || this;
        Object.setPrototypeOf(_this, MonorailUnableToProduceError.prototype);
        _this.response = response;
        return _this;
    }
    return MonorailUnableToProduceError;
}(Error));
exports.MonorailUnableToProduceError = MonorailUnableToProduceError;
var MonorailRequestError = /** @class */ (function (_super) {
    tslib_1.__extends(MonorailRequestError, _super);
    function MonorailRequestError(error) {
        var _this = _super.call(this, "Error completing request. A network failure may have prevented the request from completing. Error: " + error) || this;
        Object.setPrototypeOf(_this, MonorailRequestError.prototype);
        return _this;
    }
    return MonorailRequestError;
}(Error));
exports.MonorailRequestError = MonorailRequestError;
