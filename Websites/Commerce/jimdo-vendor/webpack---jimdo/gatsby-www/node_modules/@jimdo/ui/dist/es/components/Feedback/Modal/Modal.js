import { IconButton } from '../../Buttons/IconButton/IconButton.js';
import { iconClose } from '../../DataDisplay/Icon/icons.js';
import { Overlay } from '../../Utils/Overlay/Overlay.js';
import classNames from 'classnames';
import React__default from 'react';
import styles from './Modal.module.scss.js';
const TRANSITION_DURATION = parseFloat(styles.transitionDuration) * 1000; // in ms
const Modal = props => {
  const modalClasses = classNames(styles.modal, {
    [styles.modalSize]: props.modalSize === 'large',
    [styles.modalBackground]: props.transparent === true,
    [styles.smoothScrolling]: props.scrollable === true,
    [styles.isClosing]: !props.isOpen
  }, props.className);
  const closeClasses = classNames(styles.modalClose, props.closeClassName);
  const handleCloseClick = () => {
    if (props.closeable && props.onCloseClick) {
      props.onCloseClick();
    }
  };
  return React__default.createElement(Overlay, {
    ...props,
    className: modalClasses,
    onRequestClose: handleCloseClick,
    isOpen: props.isOpen,
    closeTimeoutMS: TRANSITION_DURATION,
    overlayClassName: classNames(styles.backdrop, {
      [styles.isClosing]: !props.isOpen
    })
  }, React__default.createElement(React__default.Fragment, null, props.children, props.closeable && React__default.createElement(IconButton, {
    icon: iconClose,
    onClick: props.onCloseClick,
    className: closeClasses,
    buttonStyle: "primary",
    ...(props.closeButtonLabel ? {
      'aria-label': props.closeButtonLabel
    } : {}),
    ...(props.closeButtonLabel ? {} : {
      'aria-hidden': true,
      tabIndex: -1
    })
  })));
};
export { Modal };