'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _objectSpread = require('@babel/runtime/helpers/objectSpread2');
var Twine = require('twine');
var I18n = require('../global/i18n');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e['default'] : e; }

var _objectSpread__default = /*#__PURE__*/_interopDefaultLegacy(_objectSpread);
var Twine__default = /*#__PURE__*/_interopDefaultLegacy(Twine);
var I18n__default = /*#__PURE__*/_interopDefaultLegacy(I18n);

function Field(name, form, node, config, state, formName) {
  this.name = name;
  this.form = form;
  this.node = node;
  this.config = _objectSpread__default({
    showErrors: true,
    showSuccess: true,
    required: false,
    validate: false,
    showHint: false
  }, config);
  this.state = _objectSpread__default({
    error: false,
    focus: false,
    filled: false,
    success: false,
    pending: false,
    hint: '',
    value: '',
    errors: {}
  }, state);
  this.formName = formName;
  this.form.fields[name] = this;
}

Field.prototype.setState = function (newState, refreshImmediately) {
  this.state = _objectSpread__default(_objectSpread__default({}, this.state), newState); // if the expression following setState depends on the DOM state being updated,
  // pass `true` for second argument to refresh Twine immediately

  if (refreshImmediately) {
    Twine__default.refreshImmediately();
  } else {
    Twine__default.refresh();
  }
};

Field.prototype.displayError = function () {
  if (this.config.showErrors) {
    for (const key in this.state.errors) {
      if (this.state.errors.hasOwnProperty(key)) {
        return I18n__default.t(`${this.form.i18nNamespace}.errors.${this.name}.${key}`, {
          err: this.state.errors[key]
        });
      }
    }
  } // Safari will implicitly return "undefined" when message is removed


  return '';
};

Field.prototype.displaySuccess = function () {
  if (this.config.showSuccess && this.state.success) {
    return I18n__default.t(`${this.form.i18nNamespace}.success_messages.${this.name}`);
  } // Safari will implicitly return "undefined" when message is removed


  return '';
};

Field.prototype.displayHint = function () {
  if (this.config.showHint && this.state.hint) {
    return I18n__default.t('signup.hint_messages.email_typo_html', {
      on_click: `ShopifyMarketing.context.${this.formName}.handleEmailSuggestionClick()`,
      // eslint-disable-line babel/camelcase
      suggestion: this.state.suggestion.full
    });
  } // Safari will implicitly return "undefined" when message is removed


  return '';
};

Field.prototype.handleBlur = function () {
  this.setState({
    focus: false,
    filled: Boolean(this.state.value)
  });

  if (!this.state.filled) {
    this.setState({
      error: false,
      errors: {},
      success: false
    });
  }
};

Field.prototype.handleFocus = function () {
  this.setState({
    focus: true
  });
};

Field.prototype.validateSet = function () {
  this.setState({
    filled: Boolean(this.state.value)
  });

  if (this.config.required) {
    if (!this.state.filled) {
      this.setState({
        error: true,
        errors: {
          empty: true
        }
      });
    }
  }
};

Twine__default.register('StatefulField', Field);

exports.default = Field;
