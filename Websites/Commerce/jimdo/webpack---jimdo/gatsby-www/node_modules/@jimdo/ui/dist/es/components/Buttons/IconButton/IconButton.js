import { Icon } from '../../DataDisplay/Icon/Icon.js';
import { LoadingDots } from '../../Feedback/LoadingDots/LoadingDots.js';
import { OverridableLink } from '../../Utils/OverridableLink/OverridableLink.js';
import classNames from 'classnames';
import React__default, { forwardRef } from 'react';
import styles from './IconButton.module.scss.js';
function IconButtonBase(props, ref) {
  const {
    className,
    disabled,
    loading,
    buttonStyle,
    icon,
    ...htmlProps
  } = props;
  const classes = classNames(styles.iconButton, {
    [styles.negativeIconButton]: buttonStyle === 'negative',
    [styles.secondaryIconButton]: buttonStyle === 'secondary',
    [styles.disabled]: disabled,
    [styles.loading]: loading
  }, className);
  if (props['component'] || props['href']) {
    return React__default.createElement(OverridableLink, {
      ref: ref,
      ...htmlProps,
      className: classes,
      "aria-disabled": disabled || undefined,
      tabIndex: disabled ? -1 : undefined
    }, loading ? React__default.createElement(LoadingDots, null) : React__default.createElement(Icon, {
      icon: icon,
      "aria-hidden": "true"
    }));
  }
  return React__default.createElement("button", {
    ...htmlProps,
    ref: ref,
    className: classes,
    disabled: loading || disabled
  }, loading ? React__default.createElement(LoadingDots, null) : React__default.createElement(Icon, {
    icon: icon,
    "aria-hidden": "true"
  }));
}
const IconButton = forwardRef(IconButtonBase);
export { IconButton };