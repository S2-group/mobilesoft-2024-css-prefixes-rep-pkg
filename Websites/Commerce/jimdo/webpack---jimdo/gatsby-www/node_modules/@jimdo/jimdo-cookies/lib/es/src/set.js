import { __assign as e } from "../node_modules/tslib/tslib.es6.js";
import { getCookieFromAllowlist as o } from "./get.js";
import { getLifetime as i } from "./lifetimes.js";
import { isProdEnv as r, handleError as t } from "./helpers.js";
import l from "js-cookie";
/**
 * @preserve
 * Compares cookie name to central allowlist and fetches expires information from it.
 * If the desired cookie name isn't part of that list yet,
 * you should use the js-cookie lib or add the desired cookie name to the allowlist:
 * https://github.com/Jimdo/jimdo-cookies#how-to-update-the-list
 * @param name - The name of the cookie
 * @param value - The value for that cookie
 * @param options - Options object: sameSite, path, domain, secure, but *no* expires
 */
var s = function (s, m, p) {
  void 0 === p && (p = {});
  var f = r(),
    a = o(s);
  if (a) {
    p.hasOwnProperty("expires") && (t(f, "Pls don't provide a custom value for cookie expiration! We fetch the proper value from the allowlist automatically for you."), delete p.expires);
    var d = p,
      u = i(a.lifetimeKey);
    "SESSION" !== a.lifetimeKey && u && (d = e(e({}, d), {
      expires: u.value
    })), l.set(s, m, d);
  } else t(f, 'No cookie "' + s + '" found in allowlist. Check for typo or simply add it!');
};
export { s as set };