"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fetchExperiments = exports.STAGE_URL = exports.PROD_URL = void 0;
var _getUserCookieValues = require("../../utilities/getUserCookieValues/getUserCookieValues");
var _utilities = require("./utilities");
var STAGE_URL = 'https://feature-flags-proxy.stage.jimdo.systems';
exports.STAGE_URL = STAGE_URL;
var PROD_URL = 'https://feature-flags-proxy.prod.jimdo.systems';
/**
 * we need to wrap the creation of BASE_URL in a function for ssr applications.
 * On server side rendering, there is no window available.
 * The function `fetchExperiments` is called in a `useEffect` and therefore not evaluated
 * during the server side rendering and therefore no errors for `window is not defined` will happen anymore
 * If we don't do this, BASE_URL would be created on import and on ssr `window` is not available at that time.
 */

exports.PROD_URL = PROD_URL;
var BASE_URL = '';
var getBaseUrl = function getBaseUrl() {
  if (BASE_URL) {
    return BASE_URL;
  }
  var isProd = window.location.host.includes('jimdo.com');
  BASE_URL = isProd ? PROD_URL : STAGE_URL;
  return BASE_URL;
};
var fetchRequest = function fetchRequest(url) {
  return fetch(url).then(function (response) {
    if (response.status !== 200) {
      return response.text().then(function (errorDescription) {
        throw new Error(errorDescription);
      });
    }
    return response.json();
  });
};
var fetchExperiments = function fetchExperiments(_ref) {
  var country = _ref.country,
    language = _ref.language,
    email = _ref.email,
    isMobileLayout = _ref.isMobileLayout,
    jimdoApp = _ref.jimdoApp,
    isAffiliate = _ref.isAffiliate,
    dateJoined = _ref.dateJoined;
  try {
    var userAccountId = (0, _getUserCookieValues.getUserAccountId)();
    var shd = (0, _getUserCookieValues.getAnonId)();
    if (!userAccountId && !shd) {// TODO handle error. what would happen to crawlers without any cookies?
    }
    var url = (0, _utilities.createURL)("".concat(getBaseUrl(), "/feature-flags"), {
      userAccountId: userAccountId,
      shd: shd,
      country: country,
      email: email,
      custom: JSON.stringify({
        language: language === null || language === void 0 ? void 0 : language.substr(0, 2).toLocaleLowerCase(),
        isMobileLayout: isMobileLayout,
        jimdoApp: jimdoApp,
        isAffiliate: isAffiliate,
        dateJoined: dateJoined
      })
    });
    return fetchRequest(url);
  } catch (e) {
    if (e instanceof Error) {
      throw new Error("".concat(e.name, ": ").concat(e.message));
    } else if (typeof e === 'string' || typeof e === 'number' || typeof e === 'boolean' || e instanceof String || e instanceof Number || e instanceof Boolean) {
      throw new Error(e.toString());
    } else {
      throw e;
    }
  }
};
exports.fetchExperiments = fetchExperiments;